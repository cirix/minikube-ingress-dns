apiVersion: v1
kind: ServiceAccount
metadata:
  name: minikube-ingress-dns
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: minikube-ingress-dns
  namespace: kube-system
  labels:
    app: minikube-ingress-dns
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - patch
    resourceNames:
      - tcp-services
      - udp-services
  - apiGroups:
      - ""
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: minikube-ingress-dns
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: minikube-ingress-dns
    namespace: kube-system
---
apiVersion: v1
kind: Pod
metadata:
  name: kube-ingress-dns-minikube
  namespace: kube-system
  labels:
    app: minikube-ingress-dns
spec:
  serviceAccountName: minikube-ingress-dns
  containers:
    - name: minikube-ingress-dns
      image: "cryptexlabs/minikube-ingress-dns:0.1.1"
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 5353
          hostPort: 5353
          protocol: TCP
        - containerPort: 5353
          hostPort: 5353
          protocol: UDP
      env:
        - name: DNS_PORT
          value: "5353"